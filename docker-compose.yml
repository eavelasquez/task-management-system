services:
  app:
    build:
      context: .
      target: dev
      args:
        NODE_ENV: development
        PORT: 3000
    ports:
      - "${PORT:-3000}:${PORT:-3000}"
    environment:
      - NODE_ENV=development
      - MONGODB_URI=${MONGODB_URI:-mongodb://mongo:27017/task-management-system}
      - PORT=${PORT:-3000}
      - DEBUG=app:*
    depends_on:
      mongo:
        condition: service_healthy
    volumes:
      - .:/app
      - /app/node_modules
      - app_logs:/app/logs
    networks:
      - app-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "node", "healthcheck.js"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  mongo:
    image: mongo:7-jammy
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_ROOT_USERNAME:-admin}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_ROOT_PASSWORD:-password}
      - MONGO_INITDB_DATABASE=task-management-system
    volumes:
      - mongo_data:/data/db
    networks:
      - app-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

volumes:
  mongo_data:
    driver: local
  app_logs:
    driver: local

networks:
  app-network:
    driver: bridge
