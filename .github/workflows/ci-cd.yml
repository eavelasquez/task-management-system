name: CI/CD Pipeline

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]

env:
  PORT: 3000
  NODE_VERSION: "18"

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"

      - name: Install dependencies
        run: npm install

      - name: Run lint and format
        run: npm run lint && npm run format:check

      - name: Run tests
        run: npm test
        env:
          MONGODB_URI: ${{ secrets.MONGODB_URI }}

  build-docker:
    needs: build-and-test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          target: production
          build-args: |
            PORT=${{ env.PORT }}
            NODE_ENV=production
          tags: task-management-system:latest
          load: true

  deploy:
    needs: [build-and-test, build-docker]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          target: production
          build-args: |
            PORT=${{ env.PORT }}
            NODE_ENV=production
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/task-management-system:latest
            ${{ secrets.DOCKER_USERNAME }}/task-management-system:${{ github.sha }}
          push: true
